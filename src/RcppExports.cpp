// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// max_ts
arma::vec max_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_max_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(max_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// min_ts
arma::vec min_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_min_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(min_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// mean_ts
arma::vec mean_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_mean_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// median_ts
arma::vec median_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_median_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(median_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// sum_ts
arma::vec sum_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_sum_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// std_ts
arma::vec std_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_std_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(std_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// skew_ts
arma::vec skew_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_skew_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(skew_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// kurt_ts
arma::vec kurt_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_kurt_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(kurt_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// amplitude_ts
arma::vec amplitude_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_amplitude_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(amplitude_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// fslope_ts
arma::vec fslope_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_fslope_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(fslope_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// abs_sum_ts
arma::vec abs_sum_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_abs_sum_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(abs_sum_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// amd_ts
arma::vec amd_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_amd_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(amd_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// mse_ts
arma::vec mse_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_mse_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(mse_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// fqr_ts
arma::vec fqr_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_fqr_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(fqr_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// tqr_ts
arma::vec tqr_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_tqr_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(tqr_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// sqr_ts
arma::vec sqr_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_sqr_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(sqr_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// iqr_ts
arma::vec iqr_ts(const arma::mat& mtx);
RcppExport SEXP _sitsfeats_iqr_ts(SEXP mtxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mtx(mtxSEXP);
    rcpp_result_gen = Rcpp::wrap(iqr_ts(mtx));
    return rcpp_result_gen;
END_RCPP
}
// calculate_vec
arma::mat calculate_vec(const arma::vec& timeseries);
RcppExport SEXP _sitsfeats_calculate_vec(SEXP timeseriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type timeseries(timeseriesSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_vec(timeseries));
    return rcpp_result_gen;
END_RCPP
}
// chn
Rcpp::NumericMatrix chn(const Rcpp::NumericMatrix& x);
RcppExport SEXP _sitsfeats_chn(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(chn(x));
    return rcpp_result_gen;
END_RCPP
}
// calc_bbox_fast
arma::rowvec calc_bbox_fast(const arma::mat& pts);
RcppExport SEXP _sitsfeats_calc_bbox_fast(SEXP ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type pts(ptsSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_bbox_fast(pts));
    return rcpp_result_gen;
END_RCPP
}
// get_seasons_fast
arma::mat get_seasons_fast(const arma::mat& pts, const arma::uword colsize);
RcppExport SEXP _sitsfeats_get_seasons_fast(SEXP ptsSEXP, SEXP colsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type pts(ptsSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type colsize(colsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(get_seasons_fast(pts, colsize));
    return rcpp_result_gen;
END_RCPP
}
// polytopleft
arma::mat polytopleft(const arma::mat bbox_pts);
RcppExport SEXP _sitsfeats_polytopleft(SEXP bbox_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type bbox_pts(bbox_ptsSEXP);
    rcpp_result_gen = Rcpp::wrap(polytopleft(bbox_pts));
    return rcpp_result_gen;
END_RCPP
}
// polytopright
arma::mat polytopright(const arma::mat bbox_pts);
RcppExport SEXP _sitsfeats_polytopright(SEXP bbox_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type bbox_pts(bbox_ptsSEXP);
    rcpp_result_gen = Rcpp::wrap(polytopright(bbox_pts));
    return rcpp_result_gen;
END_RCPP
}
// polybottomleft
arma::mat polybottomleft(const arma::mat bbox_pts);
RcppExport SEXP _sitsfeats_polybottomleft(SEXP bbox_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type bbox_pts(bbox_ptsSEXP);
    rcpp_result_gen = Rcpp::wrap(polybottomleft(bbox_pts));
    return rcpp_result_gen;
END_RCPP
}
// polybottomright
arma::mat polybottomright(const arma::mat bbox_pts);
RcppExport SEXP _sitsfeats_polybottomright(SEXP bbox_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type bbox_pts(bbox_ptsSEXP);
    rcpp_result_gen = Rcpp::wrap(polybottomright(bbox_pts));
    return rcpp_result_gen;
END_RCPP
}
// reptest
arma::vec reptest(arma::uword x, arma::uword time);
RcppExport SEXP _sitsfeats_reptest(SEXP xSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uword >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(reptest(x, time));
    return rcpp_result_gen;
END_RCPP
}
// calculate_vec_v3
Rcpp::List calculate_vec_v3(arma::mat& timeseries);
RcppExport SEXP _sitsfeats_calculate_vec_v3(SEXP timeseriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type timeseries(timeseriesSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_vec_v3(timeseries));
    return rcpp_result_gen;
END_RCPP
}
// calculate_vec_v3_id
Rcpp::List calculate_vec_v3_id(arma::mat& timeseries);
RcppExport SEXP _sitsfeats_calculate_vec_v3_id(SEXP timeseriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type timeseries(timeseriesSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_vec_v3_id(timeseries));
    return rcpp_result_gen;
END_RCPP
}
// calc_distance
arma::vec calc_distance(const arma::mat& line, const arma::rowvec& pts_cent);
RcppExport SEXP _sitsfeats_calc_distance(SEXP lineSEXP, SEXP pts_centSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type line(lineSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type pts_cent(pts_centSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_distance(line, pts_cent));
    return rcpp_result_gen;
END_RCPP
}
// gr_calc
arma::vec gr_calc(const arma::mat& pts_cent, const arma::mat& pts_line, const arma::uword size_col);
RcppExport SEXP _sitsfeats_gr_calc(SEXP pts_centSEXP, SEXP pts_lineSEXP, SEXP size_colSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type pts_cent(pts_centSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pts_line(pts_lineSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type size_col(size_colSEXP);
    rcpp_result_gen = Rcpp::wrap(gr_calc(pts_cent, pts_line, size_col));
    return rcpp_result_gen;
END_RCPP
}
// std_np
arma::mat std_np(const arma::mat& timeseries);
RcppExport SEXP _sitsfeats_std_np(SEXP timeseriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type timeseries(timeseriesSEXP);
    rcpp_result_gen = Rcpp::wrap(std_np(timeseries));
    return rcpp_result_gen;
END_RCPP
}
// calc_ecc
arma::mat calc_ecc(const arma::mat& bboxmat);
RcppExport SEXP _sitsfeats_calc_ecc(SEXP bboxmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type bboxmat(bboxmatSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_ecc(bboxmat));
    return rcpp_result_gen;
END_RCPP
}
// teste_linspace
arma::vec teste_linspace(const arma::mat& r, const arma::uword len);
RcppExport SEXP _sitsfeats_teste_linspace(SEXP rSEXP, SEXP lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type r(rSEXP);
    Rcpp::traits::input_parameter< const arma::uword >::type len(lenSEXP);
    rcpp_result_gen = Rcpp::wrap(teste_linspace(r, len));
    return rcpp_result_gen;
END_RCPP
}
// linspace_vec
arma::vec linspace_vec(const arma::rowvec& timeseries);
RcppExport SEXP _sitsfeats_linspace_vec(SEXP timeseriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type timeseries(timeseriesSEXP);
    rcpp_result_gen = Rcpp::wrap(linspace_vec(timeseries));
    return rcpp_result_gen;
END_RCPP
}
// calc_angle
arma::vec calc_angle(const arma::mat& timeseries);
RcppExport SEXP _sitsfeats_calc_angle(SEXP timeseriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type timeseries(timeseriesSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_angle(timeseries));
    return rcpp_result_gen;
END_RCPP
}
// calc_csi
arma::vec calc_csi(const arma::vec& line_length, const arma::vec& poly_area);
RcppExport SEXP _sitsfeats_calc_csi(SEXP line_lengthSEXP, SEXP poly_areaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type line_length(line_lengthSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type poly_area(poly_areaSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_csi(line_length, poly_area));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sitsfeats_max_ts", (DL_FUNC) &_sitsfeats_max_ts, 1},
    {"_sitsfeats_min_ts", (DL_FUNC) &_sitsfeats_min_ts, 1},
    {"_sitsfeats_mean_ts", (DL_FUNC) &_sitsfeats_mean_ts, 1},
    {"_sitsfeats_median_ts", (DL_FUNC) &_sitsfeats_median_ts, 1},
    {"_sitsfeats_sum_ts", (DL_FUNC) &_sitsfeats_sum_ts, 1},
    {"_sitsfeats_std_ts", (DL_FUNC) &_sitsfeats_std_ts, 1},
    {"_sitsfeats_skew_ts", (DL_FUNC) &_sitsfeats_skew_ts, 1},
    {"_sitsfeats_kurt_ts", (DL_FUNC) &_sitsfeats_kurt_ts, 1},
    {"_sitsfeats_amplitude_ts", (DL_FUNC) &_sitsfeats_amplitude_ts, 1},
    {"_sitsfeats_fslope_ts", (DL_FUNC) &_sitsfeats_fslope_ts, 1},
    {"_sitsfeats_abs_sum_ts", (DL_FUNC) &_sitsfeats_abs_sum_ts, 1},
    {"_sitsfeats_amd_ts", (DL_FUNC) &_sitsfeats_amd_ts, 1},
    {"_sitsfeats_mse_ts", (DL_FUNC) &_sitsfeats_mse_ts, 1},
    {"_sitsfeats_fqr_ts", (DL_FUNC) &_sitsfeats_fqr_ts, 1},
    {"_sitsfeats_tqr_ts", (DL_FUNC) &_sitsfeats_tqr_ts, 1},
    {"_sitsfeats_sqr_ts", (DL_FUNC) &_sitsfeats_sqr_ts, 1},
    {"_sitsfeats_iqr_ts", (DL_FUNC) &_sitsfeats_iqr_ts, 1},
    {"_sitsfeats_calculate_vec", (DL_FUNC) &_sitsfeats_calculate_vec, 1},
    {"_sitsfeats_chn", (DL_FUNC) &_sitsfeats_chn, 1},
    {"_sitsfeats_calc_bbox_fast", (DL_FUNC) &_sitsfeats_calc_bbox_fast, 1},
    {"_sitsfeats_get_seasons_fast", (DL_FUNC) &_sitsfeats_get_seasons_fast, 2},
    {"_sitsfeats_polytopleft", (DL_FUNC) &_sitsfeats_polytopleft, 1},
    {"_sitsfeats_polytopright", (DL_FUNC) &_sitsfeats_polytopright, 1},
    {"_sitsfeats_polybottomleft", (DL_FUNC) &_sitsfeats_polybottomleft, 1},
    {"_sitsfeats_polybottomright", (DL_FUNC) &_sitsfeats_polybottomright, 1},
    {"_sitsfeats_reptest", (DL_FUNC) &_sitsfeats_reptest, 2},
    {"_sitsfeats_calculate_vec_v3", (DL_FUNC) &_sitsfeats_calculate_vec_v3, 1},
    {"_sitsfeats_calculate_vec_v3_id", (DL_FUNC) &_sitsfeats_calculate_vec_v3_id, 1},
    {"_sitsfeats_calc_distance", (DL_FUNC) &_sitsfeats_calc_distance, 2},
    {"_sitsfeats_gr_calc", (DL_FUNC) &_sitsfeats_gr_calc, 3},
    {"_sitsfeats_std_np", (DL_FUNC) &_sitsfeats_std_np, 1},
    {"_sitsfeats_calc_ecc", (DL_FUNC) &_sitsfeats_calc_ecc, 1},
    {"_sitsfeats_teste_linspace", (DL_FUNC) &_sitsfeats_teste_linspace, 2},
    {"_sitsfeats_linspace_vec", (DL_FUNC) &_sitsfeats_linspace_vec, 1},
    {"_sitsfeats_calc_angle", (DL_FUNC) &_sitsfeats_calc_angle, 1},
    {"_sitsfeats_calc_csi", (DL_FUNC) &_sitsfeats_calc_csi, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_sitsfeats(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
